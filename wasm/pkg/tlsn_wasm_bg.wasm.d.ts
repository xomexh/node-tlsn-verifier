/* tslint:disable */
/* eslint-disable */
export const __wbg_prover_free: (a: number, b: number) => void;
export const prover_new: (a: any) => number;
export const prover_setup: (a: number, b: number, c: number) => any;
export const prover_send_request: (a: number, b: number, c: number, d: any) => any;
export const prover_transcript: (a: number) => [number, number, number];
export const prover_notarize: (a: number, b: any) => any;
export const prover_reveal: (a: number, b: any) => any;
export const __wbg_verifier_free: (a: number, b: number) => void;
export const verifier_new: (a: any) => number;
export const verifier_connect: (a: number, b: number, c: number) => any;
export const verifier_verify: (a: number) => any;
export const initialize: (a: number, b: number) => any;
export const build_presentation: (a: number, b: number, c: any) => [number, number, number];
export const __wbg_attestation_free: (a: number, b: number) => void;
export const attestation_verifying_key: (a: number) => any;
export const attestation_serialize: (a: number) => [number, number];
export const attestation_deserialize: (a: number, b: number) => [number, number, number];
export const __wbg_secrets_free: (a: number, b: number) => void;
export const secrets_transcript: (a: number) => any;
export const secrets_serialize: (a: number) => [number, number];
export const secrets_deserialize: (a: number, b: number) => [number, number, number];
export const __wbg_presentation_free: (a: number, b: number) => void;
export const presentation_verifying_key: (a: number) => any;
export const presentation_verify: (a: number) => [number, number, number];
export const presentation_serialize: (a: number) => [number, number];
export const presentation_deserialize: (a: number, b: number) => [number, number, number];
export const __wbg_notarizationoutput_free: (a: number, b: number) => void;
export const __wbg_get_notarizationoutput_attestation: (a: number) => number;
export const __wbg_set_notarizationoutput_attestation: (a: number, b: number) => void;
export const __wbg_get_notarizationoutput_secrets: (a: number) => number;
export const __wbg_set_notarizationoutput_secrets: (a: number, b: number) => void;
export const __wbg_workerdata_free: (a: number, b: number) => void;
export const web_spawn_start_worker: (a: number) => void;
export const __wbg_spawner_free: (a: number, b: number) => void;
export const spawner_intoRaw: (a: number) => number;
export const spawner_run: (a: number, b: number, c: number) => any;
export const web_spawn_recover_spawner: (a: number) => number;
export const startSpawner: () => any;
export const ring_core_0_17_13__bn_mul_mont: (a: number, b: number, c: number, d: number, e: number, f: number) => void;
export const memory: WebAssembly.Memory;
export const __wbindgen_malloc: (a: number, b: number) => number;
export const __wbindgen_realloc: (a: number, b: number, c: number, d: number) => number;
export const __wbindgen_exn_store: (a: number) => void;
export const __externref_table_alloc: () => number;
export const __wbindgen_export_5: WebAssembly.Table;
export const __wbindgen_free: (a: number, b: number, c: number) => void;
export const __wbindgen_export_7: WebAssembly.Table;
export const __externref_table_dealloc: (a: number) => void;
export const closure921_externref_shim: (a: number, b: number, c: any) => void;
export const _dyn_core__ops__function__FnMut_____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__heab2ba05d1a05fda: (a: number, b: number) => void;
export const closure3892_externref_shim: (a: number, b: number, c: any) => void;
export const closure4533_externref_shim: (a: number, b: number, c: any, d: any) => void;
export const __wbindgen_thread_destroy: (a?: number, b?: number, c?: number) => void;
export const __wbindgen_start: (a: number) => void;
